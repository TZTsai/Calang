poly(coeffs, symb) := sum([coeffs[i] * symb^i | i in enum(coeffs)])
grad(potential, vars) := [diff(potential, var) | var in vars]
normal(mu, sigma) := function x: 1/sqrt(2PI*sigma^2) exp(-(x-mu)^2/(2sigma^2))

#TEST
grad(x^2y/t^2,[x,y,t])  #(lambda x, y, t: [2*x*y/t**2, x**2/t**2, -2*x**2*y/t**3])(*(Symbol(var) | var in 'x y t'.split()))