# basic tests
1 #1
3*-2  #-6
abs -2 #2
x = 3
3x #9
$$ #3
$1 #121
x >= 3 and x < 5 #1
1 or 1/0 #1
3+-2^3 #-5
2 ~3^3 #-128
1+(2+3)! #121
3!-2 #4
3! abs(-2) #12
1e3 #1000
1+3e-2 #1.03
15//7 #2
not 3*2 == 3 #1
3%2 /\ 8%3 #1
abs -3 ! #6
1 xor 0 #1
(1+im)(1-im) #2
z = 3 + 4im
z.real  #3
z.imag  #4
abs z   #5
euler^(pi*im) #-1
0b101011 & 0x1D #0b1001
0.5*2^2 + lg[100+10*90] #5
[x, [y]] = [3, [2]]
[x, y] #(3, 2)

# basic function tests
a = 9
f x = a
f 2 #9
a = 10
f 2 #10
(x -> 2x) 3 #6
f[x, y] = x - y
@(x=1, y=2) f[y, x] #1
f[a, b, c..] = [a, b, c]
f[1,2,3,4] #(1,2,(3,4))
f[a, b=1] = a+b
f[2] #3
f[2,4] #6
f a = a f (a-1) if a > 0 or 1
f 4  #24
sum[1,2,3] #6
l = [1,2,3]
sum l #6

[x, y] = [3, 2]
load tests.cmdTest -t -v
load tests.envTest -t -v
load tests.funcTest -t -v
load tests.listTest -t -v
load tests.symTest -t -v
# load tests.funcOpTest -t -v 