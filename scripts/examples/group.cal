Group[g, m] = (gen: g,
               mul: m,
               iter[x]: [x, []=>iter[m[g, x]]],
               next[it]: it[1][], 
               pow[x, k]: (rec[a, b, i]: a if i==0 else
                                           rec[m[a,b], b, i-1] if i%2 else
                                           rec[a, m[b,b], i/2])
                           rec[1, x, k],
               elements[]: (rec[it, l]: l if it[0] in l else
                                       rec[next[it], l+[it[0]]])
                           rec[iter[g], []],
               order[]: len[elements[]])

gcd[a, b] = a if b == 0 else gcd[b, a%b]
prime?[n] = (find_divisor[t]:
             when(t^2>n: n, n%t==0: t, 
                  find_divisor[3 if t==2 else t+2])) ...
            n > 1 and find_divisor[2] == n

mul_order[g, p] = (G: Group[g, [x,y]=>x*y%p]) G.order[]
find_generator[p] = (order:p-1, rec[i]: when(mul_order[i, p] == order: i,
                                             i < p-1: rec[i+1],
                                             'fail)) rec[2]

UZ[p] @Group[find_generator[p], [x,y]=>x*y%p] = ...
    (elements: list[1..(p-1)],
     inverse[x]: [y for y in elements if mul[x, y] == 1][0])

# polynomial field
# F[p, n] @Group

#TEST
g = Group[2, [x,y] => x*y%18]
g.elements[]
prime?[2]  #1
prime?[19] #1
prime?[16] #0
g = Z[24]
g.elements[]
h = Z[17]
h.elements[]
h.pow[4, 87]